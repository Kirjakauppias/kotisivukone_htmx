Tarkista pyyntömenetelmä:

    Jos pyyntö ei ole POST, palauta HTTP 405 -virhe ja ilmoita, että vain POST-pyyntö on sallittu. Lopeta suoritus.

Lataa tarvittavat kirjastot ja apufunktiot:

    Sisällytä seuraavat tiedostot:
        db_enquiry.php (tietokantakyselyt, kuten käyttäjänimen tarkistus).
        funcs.php (virheiden näyttämiseen liittyvät funktiot).
        db_add_data.php (käyttäjien lisäämiseen liittyvät toiminnot).

Alusta ja suodata lomaketiedot:

    Poimi $_POST-taulukosta lomakkeen tiedot seuraavasti:
        Ota arvot password ja re_password. Jos avaimia ei ole, aseta oletusarvoksi tyhjä merkkijono.
        Suodata etunimi (firstname), sukunimi (lastname) ja käyttäjätunnus (username) seuraavasti:
            Käytä htmlspecialchars XSS-hyökkäysten estämiseksi.
            Poista ylimääräiset välilyönnit trim-funktiolla.
        Suodata sähköpostiosoite (email) seuraavasti:
            Poista ylimääräiset välilyönnit.
            Tarkista, onko sähköposti kelvollinen käyttäen FILTER_VALIDATE_EMAIL.

Tarkista käyttäjätunnuksen ja sähköpostin käytettävyys:

    Käytä checkUsernameExists ja checkUserEmailExists -funktioita tarkistamaan, ovatko käyttäjätunnus tai sähköposti jo rekisteröity tietokantaan.

Alusta virheviestitaulukko:

    Luo tyhjä taulukko $errors virheviestejä varten.

Tarkista syötteen validiteetti:

    Tarkista salasanan ja toistetun salasanan täsmäävyys.
    Varmista, että salasana täyttää seuraavat vaatimukset:
        Vähintään 8 merkkiä pitkä.
        Sisältää vähintään yhden ison kirjaimen.
        Sisältää vähintään yhden numeron.
        Sisältää vähintään yhden erikoismerkin.
    Varmista, että sähköposti on kelvollinen.
    Tarkista, ettei käyttäjätunnus tai sähköposti ole jo käytössä.

Tulosta virheet (jos on):

    Jos $errors-taulukko ei ole tyhjä:
        Käytä display_errors-funktiota virheiden näyttämiseen.
        Lopeta suoritus.

Lisää uusi käyttäjä (jos ei ole virheitä):

    Hashaa salasana turvallisesti password_hash-funktiolla.
    Aseta oletusstatus arvoksi "customer".
    Lisää käyttäjä tietokantaan addUser-funktiolla käyttäen:
        Etunimi, sukunimi, käyttäjätunnus, sähköposti, hashattu salasana ja status.

Ilmoita onnistuneesta rekisteröinnistä:

    Tulosta HTML-vastausviesti, jossa kerrotaan rekisteröinnin onnistumisesta.

Päättele ohjelma:

    Lopeta ohjelman suoritus käyttäen exit().

Virheellinen pyyntömenetelmä:

    Jos pyyntö ei ollut POST, palauta virheilmoitus ja lopeta.